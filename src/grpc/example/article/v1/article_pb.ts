// @generated by protoc-gen-es v1.7.2 with parameter "target=ts"
// @generated from file example/article/v1/article.proto (package example.article.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Article } from "./common_pb.js";

/**
 * @generated from message example.article.v1.ListArticleResponse
 */
export class ListArticleResponse extends Message<ListArticleResponse> {
  /**
   * @generated from field: repeated example.article.v1.Article articles = 1;
   */
  articles: Article[] = [];

  constructor(data?: PartialMessage<ListArticleResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "example.article.v1.ListArticleResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "articles", kind: "message", T: Article, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListArticleResponse {
    return new ListArticleResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListArticleResponse {
    return new ListArticleResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListArticleResponse {
    return new ListArticleResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListArticleResponse | PlainMessage<ListArticleResponse> | undefined, b: ListArticleResponse | PlainMessage<ListArticleResponse> | undefined): boolean {
    return proto3.util.equals(ListArticleResponse, a, b);
  }
}

